name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16.3
        env:
          POSTGRES_USER: postgres_proposal
          POSTGRES_PASSWORD: postgres_proposal
          POSTGRES_DB: proposal_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8.15.4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Generate Prisma client
      run: cd api && pnpm prisma generate
      env:
        DATABASE_URL: postgresql://postgres_proposal:postgres_proposal@localhost:5432/proposal_db?schema=public
    
    - name: Run database migrations
      run: cd api && pnpm prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres_proposal:postgres_proposal@localhost:5432/proposal_db?schema=public
    
    - name: Run tests
      run: pnpm test
      env:
        DATABASE_URL: postgresql://postgres_proposal:postgres_proposal@localhost:5432/proposal_db?schema=public
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret
        JWT_REFRESH_SECRET: test-refresh-secret
    
    - name: Build projects
      run: pnpm build
      env:
        DATABASE_URL: postgresql://postgres_proposal:postgres_proposal@localhost:5432/proposal_db?schema=public

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/proposal-system:latest
          ${{ secrets.DOCKER_USERNAME }}/proposal-system:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
